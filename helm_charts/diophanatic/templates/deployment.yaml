apiVersion: apps/v1
kind: Deployment
metadata:
  name: diophanatic-webapp
  labels:
    app: diophanatic-webapp
  namespace: default
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: diophanatic-webapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: diophanatic-webapp
    spec:
#      securityContext: Comment out on GCP
#        fsGroup: 1000
#        runAsUser: 1000
      containers:
      - image: "{{ .Values.diophanatic_webapp_image.repository }}:{{ .Values.diophanatic_webapp_image.version }}"
        imagePullPolicy: {{ .Values.diophanatic_webapp_image.pullPolicy }}
        name: diophanatic-webapp
        ports:
        - containerPort: {{ .Values.diophanatic_webapp_image.port }}
          protocol: TCP
          name: http
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: {{ .Values.diophanatic_webapp_image.initialDelaySeconds }}
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: {{ .Values.diophanatic_webapp_image.initialDelaySeconds }}
